{"version":3,"sources":["assets/target.png","assets/good_deal.png","assets/laptop.png","assets/earth-info.png","assets/shout.png","assets/index.ts","assets/calendar-check.png","components/GitCard.tsx","components/MainPage.tsx","styles/theme.tsx","components/CardPage.tsx","App.tsx","index.tsx"],"names":["icons","CalendarCheck","Shout","EarthInfo","Laptop","GoodDeal","Target","GitCard","selectedBackgroundColor","selectedTextColor","selectedIcon","selectedRepository","styles","makeStyles","theme","iconButtonWithPrimaryBorder","border","palette","primary","main","iconButtonWithWhiteBorder","root","maxWidth","position","icon","height","width","top","left","borderRadius","backgroundColor","cover","details","display","flexDirection","background","color","paddingTop","links","textDecoration","marginRight","useState","contributors","setContributors","IconSet","useEffect","fetch","contributors_url","then","res","json","Card","className","CardMedia","component","classes","image","CardContent","Box","justifyContent","alignItems","Typography","variant","target","rel","href","html_url","name","align","owner","login","description","flexWrap","pt","slice","map","contributor","index","m","Avatar","alt","src","avatar_url","pb","MainPage","username","setUsername","tooltip","setTooltip","reposLoaded","setReposLoaded","reposLoading","setReposLoading","allRepos","setAllRepos","setSelectedRepository","setSelectedIcon","setSelectedTextColor","setSelectedBackgroundColor","p","my","mt","ClickAwayListener","onClickAway","Tooltip","PopperProps","disablePortal","onClose","open","disableFocusListener","disableHoverListener","disableTouchListener","title","IconButton","onClick","navigator","clipboard","writeText","FileCopyRounded","mb","gutterBottom","TextField","size","label","placeholder","onChange","event","value","CircularProgress","Button","length","Autocomplete","options","getOptionLabel","option","getOptionSelected","id","style","renderInput","params","Object","keys","px","FormatColorTextRounded","hex","Divider","orientation","flexItem","FormatColorFillRounded","createMuiTheme","secondary","default","error","overrides","MuiButton","padding","textTransform","whiteSpace","CardPage","useParams","text","user","repository","loadingRepo","setLoadingRepo","repositoryObj","setRepositoryObj","App","ThemeProvider","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f2862b2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/target.c0360e41.png\";","export default __webpack_public_path__ + \"static/media/good_deal.e1b5f149.png\";","export default __webpack_public_path__ + \"static/media/laptop.51d1ef0f.png\";","export default __webpack_public_path__ + \"static/media/earth-info.7017e214.png\";","export default __webpack_public_path__ + \"static/media/shout.37ce1fd9.png\";","import Target from './target.png'\r\nimport GoodDeal from './good_deal.png'\r\nimport Laptop from './laptop.png'\r\nimport EarthInfo from './earth-info.png'\r\nimport Shout from './shout.png'\r\nimport CalendarCheck from './calendar-check.png'\r\n\r\n\r\n\r\n\r\n/* import AccountIcon from './account.png'\r\nimport ApiIcon from './api.png'\r\nimport BugIcon from './bug.png'\r\nimport CodeIcon from './code.png'\r\nimport CodeFork from './code-fork.png'\r\nimport ConsoleIcon from './console.png'\r\nimport GithubIcon from './github.png'\r\nimport SwiftUiIcon from './swiftui.png' */\r\n\r\nconst icons = {\r\n  CalendarCheck,\r\n  Shout,\r\n  EarthInfo,\r\n  Laptop,\r\n  GoodDeal,\r\n  Target,\r\n\r\n  /*     AccountIcon,\r\n      ApiIcon,\r\n      BugIcon,\r\n      CodeIcon,\r\n      CodeFork,\r\n      ConsoleIcon,\r\n      GithubIcon,\r\n      SwiftUiIcon */\r\n}\r\n\r\nexport default icons;","export default __webpack_public_path__ + \"static/media/calendar-check.2f32931e.png\";","import React, { useEffect, useState } from 'react'\r\nimport { Avatar, Box, Card, CardContent, CardMedia, makeStyles, Theme, Typography } from '@material-ui/core'\r\nimport GitHubButton from 'react-github-btn'\r\nimport IconSet from \"../assets\";\r\nimport { ColorValue } from 'material-ui-color';\r\n\r\ninterface GitCardProps {\r\n  selectedBackgroundColor: ColorValue;\r\n  selectedTextColor: ColorValue;\r\n  selectedIcon: string;\r\n  selectedRepository: any;\r\n}\r\n\r\nexport default function GitCard({\r\n  selectedBackgroundColor,\r\n  selectedTextColor,\r\n  selectedIcon,\r\n  selectedRepository\r\n}: GitCardProps) {\r\n  const styles = makeStyles((theme: Theme) => ({\r\n    iconButtonWithPrimaryBorder: {\r\n      border: `1px solid ${theme.palette.primary.main}`\r\n    },\r\n    iconButtonWithWhiteBorder: {\r\n      border: `1px solid #fff`\r\n    },\r\n    root: {\r\n      maxWidth: 500,\r\n      position: 'relative'\r\n    },\r\n    icon: {\r\n      height: 200,\r\n      width: 200,\r\n      position: 'absolute',\r\n      top: 25,\r\n      left: 150,\r\n      border: '2px solid #fff',\r\n      borderRadius: '50%',\r\n      backgroundColor: '#fff'\r\n    },\r\n    cover: {\r\n      height: 150,\r\n    },\r\n    details: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      background: `linear-gradient(to top, #fff, #${selectedBackgroundColor})`,\r\n      color: `#${selectedTextColor}`,\r\n      paddingTop: 100\r\n    },\r\n    links: {\r\n      color: 'inherit',\r\n      textDecoration: 'none'\r\n    },\r\n    marginRight: {\r\n      marginRight: 10\r\n    }\r\n  }))();\r\n  const [contributors, setContributors] = useState<any[]>([]);\r\n\r\n  const icons: any = IconSet;\r\n\r\n  useEffect(() => {\r\n    fetch(selectedRepository.contributors_url)\r\n      .then(res => res.json())\r\n      .then(res => setContributors(res))\r\n  }, [selectedRepository])\r\n\r\n  return (\r\n    <Card className={styles.root}>\r\n      <CardMedia className={styles.cover} component=\"div\" />\r\n      <CardMedia\r\n        classes={{ root: styles.icon }}\r\n        image={icons[selectedIcon]}\r\n      />\r\n      <div className={styles.details}>\r\n        <CardContent>\r\n          <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n            <Typography component=\"h5\" variant=\"h5\" className={styles.marginRight}>\r\n              <a\r\n                className={styles.links}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                href={selectedRepository.html_url}>{selectedRepository.name}\r\n              </a>\r\n            </Typography>\r\n            <GitHubButton\r\n              href={selectedRepository.html_url}\r\n              data-icon=\"octicon-star\"\r\n              data-size=\"large\"\r\n              data-show-count=\"true\">Star\r\n            </GitHubButton>\r\n          </Box>\r\n        <Typography variant=\"subtitle1\" align=\"center\">\r\n          <a\r\n            className={styles.links}\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            href={selectedRepository.owner.html_url}>@{selectedRepository.owner.login}\r\n          </a>\r\n        </Typography>\r\n        <Typography variant=\"subtitle2\" align=\"center\">\r\n          {selectedRepository.description}\r\n        </Typography>\r\n      </CardContent>\r\n        <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"center\" pt={3}>\r\n          {\r\n            contributors.slice(0, 5).map((contributor, index) => <Box key={index} m={1}>\r\n              <a href={contributor.html_url}>\r\n                <Avatar alt={contributor.login} src={contributor.avatar_url} />\r\n              </a>\r\n            </Box>)\r\n          }\r\n        </Box>\r\n        <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"center\" pb={3}>\r\n          {\r\n            contributors.slice(5, 10).map((contributor, index) => <Box key={index} m={1}>\r\n              <a href={contributor.html_url}>\r\n                <Avatar alt={contributor.login} src={contributor.avatar_url} />\r\n              </a>\r\n            </Box>)\r\n          }\r\n        </Box>\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n","import { Box, Button, CircularProgress, ClickAwayListener, Divider, IconButton, makeStyles, TextField, Theme, Tooltip, Typography } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport IconSet from \"../assets\";\r\nimport { ColorBox, ColorValue } from 'material-ui-color';\r\nimport { FormatColorTextRounded, FormatColorFillRounded, FileCopyRounded } from '@material-ui/icons';\r\nimport GitCard from './GitCard';\r\n\r\nexport default function MainPage() {\r\n  const [username, setUsername] = useState('');\r\n  const [tooltip, setTooltip] = useState(false);\r\n  const [reposLoaded, setReposLoaded] = useState(false);\r\n  const [reposLoading, setReposLoading] = useState(false);\r\n  const [allRepos, setAllRepos] = useState<any[]>([]);\r\n  const [selectedRepository, setSelectedRepository] = useState<any>();\r\n  const [selectedIcon, setSelectedIcon] = useState<any>();\r\n  const [selectedTextColor, setSelectedTextColor] = useState<ColorValue>('000');\r\n  const [selectedBackgroundColor, setSelectedBackgroundColor] = useState<ColorValue>('000');\r\n  const icons: any = IconSet;\r\n  const styles = makeStyles((theme: Theme) => ({\r\n    iconButtonWithPrimaryBorder: {\r\n      border: `1px solid ${theme.palette.primary.main}`\r\n    },\r\n    iconButtonWithWhiteBorder: {\r\n      border: `1px solid #fff`\r\n    },\r\n    marginRight: {\r\n      marginRight: 10\r\n    }\r\n  }))();\r\n\r\n  const getAllRepos = () => {\r\n    setReposLoading(true);\r\n    fetch(`https://api.github.com/users/${username}/repos`)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        setAllRepos(res);\r\n        setReposLoaded(true);\r\n        setReposLoading(false);\r\n      });\r\n  }\r\n\r\n  const handleCopyLink = () => {\r\n    navigator.clipboard.writeText(\r\n      `https://my-git-card.herokuapp.com/${selectedBackgroundColor}/${selectedTextColor}/${selectedIcon}/${username}/${selectedRepository.name}`\r\n    ).then(res => setTooltip(true));\r\n  }\r\n\r\n  return (\r\n    <Box justifyContent=\"center\" display=\"flex\" p={4}>\r\n      {\r\n        selectedRepository && selectedIcon && <Box width=\"50%\">\r\n          <Typography variant=\"h2\">Card Preview</Typography>\r\n          <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" my={5} position=\"sticky\" top=\"30px\">\r\n            <GitCard\r\n              selectedBackgroundColor={selectedBackgroundColor}\r\n              selectedTextColor={selectedTextColor}\r\n              selectedIcon={selectedIcon}\r\n              selectedRepository={selectedRepository}\r\n            />\r\n            <Box mt={2} display=\"flex\" alignItems=\"center\">\r\n              <Typography color=\"secondary\">\r\n                {`https://my-git-card.herokuapp.com/${selectedBackgroundColor}/${selectedTextColor}/${selectedIcon}/${username}/${selectedRepository.name}`}\r\n              </Typography>\r\n              <ClickAwayListener onClickAway={() => setTooltip(false)}>\r\n                <div>\r\n                  <Tooltip\r\n                    PopperProps={{\r\n                      disablePortal: true,\r\n                    }}\r\n                    onClose={() => setTooltip(false)}\r\n                    open={tooltip}\r\n                    disableFocusListener\r\n                    disableHoverListener\r\n                    disableTouchListener\r\n                    title=\"Copied to Clipboard\"\r\n                  >\r\n                    <IconButton color=\"primary\" onClick={handleCopyLink}>\r\n                      <FileCopyRounded />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </div>\r\n              </ClickAwayListener>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      }\r\n\r\n      <Box width=\"50%\">\r\n        <Typography variant=\"h2\">Create your custom card</Typography>\r\n        <Box mt={5} mb={3}>\r\n          <Typography\r\n            variant=\"h5\"\r\n            gutterBottom\r\n          >Enter your username</Typography>\r\n          <TextField\r\n            size=\"medium\"\r\n            label=\"Username\"\r\n            variant=\"outlined\"\r\n            placeholder=\"Enter Github username\"\r\n            onChange={event => setUsername(event.target.value)}\r\n          />\r\n\r\n          <Box my={1}>\r\n            {reposLoading\r\n              ? <CircularProgress size={30} />\r\n              : <Button\r\n                onClick={getAllRepos}\r\n                color=\"default\"\r\n                variant=\"outlined\"\r\n              >Get Repos</Button>\r\n            }\r\n          </Box>\r\n        </Box>\r\n\r\n        {reposLoaded && (\r\n          <Box my={3}>\r\n            {allRepos.length\r\n              ? <div>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  gutterBottom\r\n                >\r\n                  Select your Repository\r\n                </Typography>\r\n\r\n                <Autocomplete\r\n                  size=\"small\"\r\n                  options={allRepos}\r\n                  getOptionLabel={(option) => option.name}\r\n                  getOptionSelected={option => option.id === selectedRepository?.id}\r\n                  style={{ width: 300 }}\r\n                  onChange={(event, value) => setSelectedRepository(value)}\r\n                  renderInput={(params) => <TextField\r\n                    {...params}\r\n                    label=\"Repository\"\r\n                    variant=\"outlined\"\r\n                    placeholder=\"Search Repository name\"\r\n                  />}\r\n                />\r\n              </div>\r\n              : <Typography\r\n                color=\"textSecondary\"\r\n                variant=\"subtitle1\"\r\n                align=\"center\"\r\n              >No public repositories found</Typography>\r\n            }\r\n          </Box>\r\n        )}\r\n\r\n        {\r\n          selectedRepository && (\r\n            <Box my={3}>\r\n              <Typography\r\n                variant=\"h5\"\r\n                gutterBottom\r\n              >\r\n                Select an Icon\r\n              </Typography>\r\n              <Box>\r\n                {\r\n                  Object.keys(IconSet).map((icon: any, index) => (<Box key={index} m={1} display=\"inline\">\r\n                    <IconButton\r\n                      className={selectedIcon === icon\r\n                        ? styles.iconButtonWithPrimaryBorder\r\n                        : styles.iconButtonWithWhiteBorder}\r\n                      onClick={() => setSelectedIcon(icon)}\r\n                    >\r\n                      <img src={icons[icon]} alt={icon} />\r\n                    </IconButton>\r\n                  </Box>\r\n                  ))\r\n                }\r\n              </Box>\r\n            </Box>\r\n          )\r\n        }\r\n\r\n        {\r\n          selectedRepository && selectedIcon && (\r\n            <Box my={2}>\r\n              <Box my={2}>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  gutterBottom\r\n                >\r\n                  Select Colors\r\n                </Typography>\r\n              </Box>\r\n\r\n              <Box display=\"flex\">\r\n                <Box m={2}>\r\n                  <Box px={2} display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                    <FormatColorTextRounded />\r\n                    <Typography variant=\"h6\">Text Color</Typography>\r\n                  </Box>\r\n\r\n                  <ColorBox\r\n                    key=\"text\"\r\n                    value={`#${selectedTextColor}`}\r\n                    onChange={event => setSelectedTextColor(`${event.hex}`)}\r\n                  />\r\n                </Box>\r\n                <Divider orientation=\"vertical\" flexItem />\r\n                <Box m={2}>\r\n                  <Box px={1} display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                    <FormatColorFillRounded />\r\n                    <Typography variant=\"h6\">Background Color</Typography>\r\n                  </Box>\r\n\r\n                  <ColorBox\r\n                    key=\"background\"\r\n                    value={`#${selectedBackgroundColor}`}\r\n                    onChange={event => setSelectedBackgroundColor(`${event.hex}`)}\r\n                  />\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          )\r\n        }\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n","import { createMuiTheme } from '@material-ui/core';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#20C668',\r\n    },\r\n    secondary: {\r\n      main: '#293147',\r\n    },\r\n    background: {\r\n      default: '#fff',\r\n    },\r\n    error: {\r\n      main: '#E02856',\r\n    }\r\n  },\r\n  overrides: {\r\n    MuiButton: {\r\n      root: {\r\n        padding: '10px 8px',\r\n        height: 40,\r\n        color: '#20C668',\r\n        textTransform: 'none',\r\n        whiteSpace: 'nowrap'\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nexport default theme;\r\n","import { Box, CircularProgress } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport GitCard from './GitCard';\r\n\r\nexport default function CardPage() {\r\n\r\n  const { background, text, icon, user, repository } = useParams<{\r\n    background: string; \r\n    text: string; \r\n    icon: string; \r\n    user: string; \r\n    repository: string;\r\n  }>();\r\n\r\n  const [loadingRepo, setLoadingRepo] = useState(true);\r\n  const [repositoryObj, setRepositoryObj] = useState<any>();\r\n\r\n  useEffect(() => {\r\n    fetch(`https://api.github.com/repos/${user}/${repository}`)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        setRepositoryObj(res);\r\n        setLoadingRepo(false);\r\n      })\r\n  }, [user, repository])\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      position=\"absolute\"\r\n    >\r\n    { loadingRepo\r\n      ? <CircularProgress />\r\n      : <GitCard\r\n        selectedBackgroundColor={background}\r\n        selectedTextColor={text}\r\n        selectedRepository={repositoryObj}\r\n        selectedIcon={icon}\r\n      />\r\n    }\r\n    </Box>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport MainPage from './components/MainPage';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport theme from './styles/theme';\r\nimport CardPage from './components/CardPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/:background/:text/:icon/:user/:repository\">\r\n            <CardPage />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <MainPage />\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}